#!/usr/bin/env python3

"""
Script to create an MMD xml file from a netcdf file.

License:
     This file is part of the py-mmd-tools repository (https://github.com/metno/py-mmd-tools).
     py-mmd-tools is licensed under Apache License 2.0 (https://github.com/metno/py-mmd-tools/blob/master/LICENSE)

Usage: nc_to_mmd [-h] -i INPUT -o OUTPUT_DIR
Example: 
    $ python nc_to_mmd -i ../tests/data/reference_nc.nc -o .
"""

import argparse
import pathlib
from py_mmd_tools import nc_to_mmd


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Create an MMD xml file from an input netCDF file.")

    # Add to parse a whole server?
    parser.add_argument('-i', '--input', type=str, help="Input file, folder or OPeNDAP url.")
    parser.add_argument('-o', '--output_dir', type=pathlib.Path, help="Output directory.")
    args = parser.parse_args()

    # args.input as str, because if pathlib.Path, it is not compatible with URLs

    # Directory containing nc files
    if pathlib.Path(args.input).is_dir():
        inputfiles = pathlib.Path(args.input).glob('*.nc')
    # Single nc file
    elif pathlib.Path(args.input).is_file():
        inputfiles = [args.input]
    # A remote OPeNDAP url
    elif 'dodsC' in args.input: #args.input.startswith('https://thredds.met.no/thredds/dodsC/'):
        inputfiles = [args.input]
    else:
        print(f'Invalid input: {args.input}')
        exit(1)

    for file in inputfiles:
        outfile = (args.output_dir / pathlib.Path(file).stem).with_suffix('.xml')
        md = nc_to_mmd.Nc_to_mmd(str(file), output_file=outfile)
        md.to_mmd()
